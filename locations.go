package main

import (
	"encoding/json"
	"fmt"
	"io"
	"net/http"
)

type AutoGenerated struct {
	Count    int    `json:"count"`
	Next     *string `json:"next"`
	Previous *string    `json:"previous"`
	Results  []struct {
		Name string `json:"name"`
		URL  string `json:"url"`
	} `json:"results"`
}

func updatePrevNext(data *AutoGenerated, config *Config) {
	if data.Next != nil {
		config.NextPage = *data.Next
	} else {
		config.NextPage = ""
	}
	if data.Previous != nil {
		config.PrevPage = *data.Previous
	} else {
		config.PrevPage = ""
	}

}

func getLocations(url string) (*AutoGenerated, error) {
	res, err := http.Get(url)
	if err != nil {
		return nil, err
	}
	body, err := io.ReadAll(res.Body) 
	if err != nil {
		return nil, err
	}
	res.Body.Close()
	var data AutoGenerated
	err = json.Unmarshal(body, &data)
	if err != nil {
		return nil, err
	}
	return &data, nil
}

func printLocations(data *AutoGenerated) {
	for _, location := range data.Results {
		fmt.Println(location.Name)
	}
}